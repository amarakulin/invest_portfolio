import { graphDataConverter } from '../redux/graphReduser';

const data = {
	lines: [
		[
			'time',
			'1542412800000',
			'1542499200000',
			'1542585600000',
			'1542672000000',
			'1542758400000',
			'1542844800000',
			'1542931200000',
			'1543017600000',
			'1543104000000',
			'1543190400000',
			'1543276800000',
			'1543363200000',
			'1543449600000',
			'1543536000000',
			'1543622400000',
			'1543708800000',
			'1543795200000',
			'1543881600000',
			'1543968000000',
			'1544054400000',
		],
		[
			'y0',
			'68',
			'63',
			'66',
		],
		[
			'total',
			'22',
			'0',
			'30',
			'436',
			'33',
			'431',
			'18',
			'436',
			'45',
			'0',
			'57',
			'61',
			'70',
			'47',
			'31',
			'34',
			'40',
			'55',
			'27',
			'57',
		],
	],
	types: {
		y0: 'line',
		total: 'line',
		time: 'time',
	},
	names: {
		y0: '#0',
		total: '#1',
	},
	color: {
		y0: '#ffac17',
		total: '#19f3f2'
	},
	purchaseDate: {
		y0: 1543881600000,
		total: 1542412800000
	}
}

const dataAfter = {
	lines: [
		[
			'time',
			1542412800000,
			1542499200000,
			1542585600000,
			1542672000000,
			1542758400000,
			1542844800000,
			1542931200000,
			1543017600000,
			1543104000000,
			1543190400000,
			1543276800000,
			1543363200000,
			1543449600000,
			1543536000000,
			1543622400000,
			1543708800000,
			1543795200000,
			1543881600000,
			1543968000000,
			1544054400000,
		],
		[
			'y0',
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			68,
			63,
			66,
		],
		[
			'total',
			22,
			0,
			30,
			436,
			33,
			431,
			18,
			436,
			45,
			0,
			57,
			61,
			70,
			47,
			31,
			34,
			40,
			55,
			27,
			57,
		],
	],
	types: {
		y0: 'line',
		total: 'line',
		time: 'time',
	},
	names: {
		y0: '#0',
		total: '#1',
	},
	color: {
		y0: '#ffac17',
		total: '#19f3f2'
	},
	purchaseDate: {
		y0: 1543881600000,
		total: 1542412800000,
	}
}

it('graph data converter test', () => {
	expect(graphDataConverter(data)).toEqual(dataAfter);
})

